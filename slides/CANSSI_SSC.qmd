---
title: "Reproducible papers in the life sciences using R"
author: |
  | Ariel Mundo Ortiz
institute: |
  | Université de Montréal
  |
  | \includegraphics[width=0.6cm]{figures/Twitter.png} @amundortiz 
  |
  | \includegraphics[width=0.6cm]{figures/Mastodon.png} @aimundo 
date: |
  | CANSSI Statistical Software Conference
  | November 10, 2022
keep-tex: true
format: 
  beamer:
    theme: Antibes
    colortheme: default
    navigation: horizontal
    incremental: true
    header-includes: |
      \logo{\includegraphics[width=2cm]{figures/udem.png}}
      \usepackage{copyrightbox}
      \usepackage{dirtree}
      \usepackage{forest}
---

## Introduction

- `RMarkdown` is a powerful tool to create reproducible papers
- However, R is rarely used in the life sciences as a default method to create papers
- \color{red}{Why?}

## Reasons

- "R is just for Stats"
- "There is a learning curve"
- **"I can't create figures for publication"**


## The Problem

- Papers in the life sciences usually require figures where the following are combined:
    - Images from cells/tissues
    - Figures that summarize data
    - Figures that present statistical analyses (with "p-values")
    
## The Problem

\begin{figure}
\centering
\caption{A typical figure}
\copyrightbox[b]{\includegraphics[width=2.5cm]{figures/figure.jpg}}
                {\tiny{Guerra et al.} \textit{Neoplasia} \textbf{2021}}
    \end{figure}

- \color{red}{Can figures like this be created using `RMarkdown`?}

## The Solution

- Yes, we can create figures like this using R!

- We will need to use a combination of packages to achieve this

\begin{figure}
\centering
\caption{The packages}
\includegraphics[width=6cm]{figures/R_packages.png}
\end{figure}

## The Solution

- \textcolor{green}{{bookdown}} allows to create a reproducible paper:
    - Each section of the paper: (Materials and Methods, Results, etc.) is in a separate `Rmd` file
    - More details can be found in \url{https://bookdown.org/} 
- \textcolor{green}{{here}} allows to easily call scripts within the document (we will look at this later)

## The Solution

- Let's think about a typical scenario, where you:
    - Have written your paper sections (Methods, Results, etc) each section is in a `Rmd` file
    - Have some images
    - Have some data that needs to be analyzed
    - Want to create a composite figure of images/data analysis
    
    - **For the sake of time, I will focus on the image composition/data analysis part**
    
## Project Organization

- How to organize the files:

. . .

\footnotesize
\centering
\begin{forest}
        for tree={
            font=\ttfamily,
            text width=8cm,% added <<<<<<<<<<<<<<
            grow'=0,
            child anchor=west,
            parent anchor=south,
            anchor=west,
            calign=first,
            inner xsep=7pt,
            edge path={
                \noexpand\path [draw, \forestoption{edge}]
                (!u.south west) +(7.5pt,0) |- (.child anchor) 
                \forestoption{edge label};
            },
            before typesetting nodes={
                if n=1
                {insert before={[,phantom]}}
                {}
            },
            fit=band,
            before computing xy={l=15pt},
        }  
        [Project
        [Data
        [csv files
        ]
        ]
        [Code
        [R Script(s)
        ]
        ]
        [Figures
        [PNG (or other image files)
        ]
        ]
        [Manuscript
        [Rmd files (sections)
        ]
        ]
        ]
    \end{forest}

\normalsize

## A Handy Script: Images

- We can read the images (in PNG format), get the data, do the analysis and create the figure in a single script!
    - Reading the images is achieved by \textcolor{green}{{grid}} and \textcolor{green}{{png}}
    - \textcolor{green}{{ggplot2}} creates the plot of our analysis
    - \textcolor{green}{{patchwork}} allows us to assemble everything
    
## A Handy Script: Images

- How do we read a PNG image?

\footnotesize

``` {r}
#| code-overflow: wrap
#| eval: false
#| echo: true

cells<-rasterGrob(readPNG(here("figures",
                               "cells.png"),
                          native=TRUE))

```
\normalsize

- We use \textcolor{green}{{here}} to call the PNG file located in the "figures" directory.
- `rasterGrob` makes the image a "graphical object" (grob) that can be invoked later

## A Handy Script: Data Analysis

\footnotesize

``` {r}
#| code-overflow: wrap
#| eval: false
#| echo: true

# for regression

formula<-y~x

# create a plot of the data and the regression
a1<-ggplot(data=data,
           aes(x=weight,y=body_fat,fill=Group,color=Group)
           )+
    geom_point(show.legend=FALSE,shape=21,colour='black',size=5,
               alpha=0.7)+
    geom_smooth(method="lm",formula=formula, se=T)+
    stat_poly_eq(use_label(c("R2","p.value")), 
                 formula = formula, size = 3)

```
\normalsize

- Try \textcolor{green}{{ggpmisc}}

## A Handy Script: Layout

- Provide a layout for the figure (\url{https://patchwork.data-imaginist.com/articles/guides/layout.html})

. . .

\footnotesize

``` {r}
#| code-overflow: wrap
#| eval: false
#| echo: true


                        layout<-"
                        AAAABBBB
                        AAAABBBB
                        AAAABBBB
                        AAAABBBB
                        CCCCDDDD
                        CCCCDDDD
                        CCCCEEEE
                        CCCCEEEE
                        "
```

## A Handy Script: Assemble!

- Use `wrap_elements` and \textcolor{green}{{patchwork}}

\footnotesize

``` {r}
#| code-overflow: wrap
#| eval: false
#| echo: true

                image_a<-wrap_elements(
                    panel=cells
                )+
                    wrap_elements(
                        panel=molecule
                    )+
                    wrap_elements(
                        panel=jellyfish
                    )+
                    ylab("jellyfish")+
                    a1+
                    a2+
                    plot_layout(design=layout)
```
\normalsize

## Conclusion

- We can use R to create reproducible papers and complex figures
- There **is** a learning curve, but once you learn you won't go back to W**d!

## Acknowlegdments

\begin{columns}
\begin{column}{0.6\textwidth}
\footnotesize
- Nasri Lab (Université de Montréal) \\
- Centre de recherches mathématiques (CRM)\\
- Mathematics for Public Health (MfPH)

\end{column}
\begin{column}{0.4\textwidth}
\vspace{0.01em}
\centering
        \includegraphics[width=2cm]{figures/logo.png}\\
        \includegraphics[width=2cm]{figures/espum.jpg}\\
        \includegraphics[width=2cm]{figures/crm.png}\\
         \includegraphics[width=2cm]{figures/mfph.png}\\
         
\end{column}
\end{columns}
